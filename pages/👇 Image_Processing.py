import streamlit as st
import ExerciseChapter.Chapter03 as c3
import ExerciseChapter.Chapter04 as c4
import ExerciseChapter.Chapter05 as c5
import ExerciseChapter.Chapter09 as c9

app_mode = st.sidebar.selectbox(
    'üëá Image Processing Select', ['Chapter 3', 'Chapter 4', 'Chapter 5', 'Chapter 9'])

page_bg_img = '''
    <style>
    .stApp {
        background: url("https://cutewallpaper.org/21x/2olaxzatm/25-Awesome-Web-Background-Animation-Effects-Css-animation-.jpg");
        background-size: cover;
    }
    </style>
'''
st.markdown(page_bg_img, unsafe_allow_html=True)
if app_mode == 'Chapter 3':
    with st.sidebar.container():
        st.header("Bi·∫øn ƒë·ªïi ƒë·ªô s√°ng v√† l·ªçc trong kh√¥ng gian")
        ques = st.radio(
            "Choose one", ['3.1 L√†m √¢m ·∫£nh (Negative)', '3.2 Logarit ·∫£nh', '3.3 L≈©y th·ª´a ·∫£nh', '3.4 Bi·∫øn ƒë·ªïi tuy·∫øn t√≠nh t·ª´ng ph·∫ßn',
                           '3.5 Histogram', '3.6 C√¢n b·∫±ng Histogram', '3.7 C√¢n b·∫±ng Histogram c·ªßa ·∫£nh m√†u', '3.8 Local Histogram', '3.9 Th·ªëng k√™ histogram',
                           '3.10 L·ªçc box', '3.11 L·ªçc Gauss', '3.12 Ph√¢n ng∆∞·ª°ng', '3.13 L·ªçc median', '3.14 Sharpen', '3.15 Gradient'
                           ])
    if ques == '3.1 L√†m √¢m ·∫£nh (Negative)':
        st.subheader(':blue[L√†m √¢m ·∫£nh (Negative)]')
        c3.OnNegative()
    elif ques == '3.2 Logarit ·∫£nh':
        st.subheader(':blue[Logarit ·∫£nh]')
        c3.OnLogarit()
    elif ques == '3.3 L≈©y th·ª´a ·∫£nh':
        st.subheader(':blue[L≈©y th·ª´a ·∫£nh]')
        c3.OnPower()
    elif ques == '3.4 Bi·∫øn ƒë·ªïi tuy·∫øn t√≠nh t·ª´ng ph·∫ßn':
        st.subheader(':blue[Bi·∫øn ƒë·ªïi tuy·∫øn t√≠nh t·ª´ng ph·∫ßn]')
        c3.OnPiecewiseLinear()
    elif ques == '3.5 Histogram':
        st.subheader(':blue[Histogram]')
        c3.OnHistogram()
    elif ques == '3.6 C√¢n b·∫±ng Histogram':
        st.subheader(':blue[C√¢n b·∫±ng Histogram]')
        c3.onHistEqual()
    elif ques == '3.7 C√¢n b·∫±ng Histogram c·ªßa ·∫£nh m√†u':
        st.subheader(':blue[C√¢n b·∫±ng Histogram c·ªßa ·∫£nh m√†u]')
        c3.onHistEqualColor()
    elif ques == '3.8 Local Histogram':
        st.subheader(':blue[Local Histogram]')
        c3.onLocalHist()
    elif ques == '3.9 Th·ªëng k√™ histogram':
        st.subheader(':blue[Th·ªëng k√™ histogram]')
        c3.onHistStat()
    elif ques == '3.10 L·ªçc box':
        st.subheader(':blue[L·ªçc box]')
        c3.onBoxFilter()
    elif ques == '3.11 L·ªçc Gauss':
        st.subheader(':blue[L·ªçc Gauss]')
        c3.onLowpassGauss()
    elif ques == '3.12 Ph√¢n ng∆∞·ª°ng':
        st.subheader(':blue[Ph√¢n ng∆∞·ª°ng]')
        c3.onThreshold()
    elif ques == '3.13 L·ªçc median':
        st.subheader(':blue[L·ªçc median]')
        c3.onMedianFilter()
    elif ques == '3.14 Sharpen':
        st.subheader(':blue[Sharpen]')
        c3.onSharpen()
    elif ques == '3.15 Gradient':
        st.subheader(':blue[Gradient]')
        c3.onGradient()
elif app_mode == 'Chapter 4':
    with st.sidebar.container():
        st.header("L·ªçc trong mi·ªÅn t·∫ßn s·ªë")
        ques = st.radio(
            "Choose one", ['4.1 Spectrum', '4.2 L·ªçc trong mi·ªÅn t·∫ßn s·ªë - highpass filter', '4.3 V·∫Ω b·ªô l·ªçc Notch Reject'])
    if ques == '4.1 Spectrum':
        st.subheader(':blue[Spectrum]')
        c4.onSpectrum()
    elif ques == '4.2 L·ªçc trong mi·ªÅn t·∫ßn s·ªë - highpass filter':
        st.subheader(':blue[L·ªçc trong mi·ªÅn t·∫ßn s·ªë - highpass filter]')
        c4.onFrequencyFilter()
    elif ques == '4.3 V·∫Ω b·ªô l·ªçc Notch Reject':
        st.subheader(':blue[V·∫Ω b·ªô l·ªçc Notch Reject]')
        c4.onDrawNotchRejectFilter()
elif app_mode == 'Chapter 5':
    with st.sidebar.container():
        st.header("Kh√¥i ph·ª•c ·∫£nh")
        ques = st.radio(
            "Choose one", ['5.1 T·∫°o nhi·ªÖu chuy·ªÉn ƒë·ªông', '5.2 G·ª° nhi·ªÖu c·ªßa ·∫£nh c√≥ √≠t nhi·ªÖu', '5.3 G·ª° nhi·ªÖu c·ªßa ·∫£nh c√≥ nhi·ªÅu nhi·ªÖu'])
    if ques == '5.1 T·∫°o nhi·ªÖu chuy·ªÉn ƒë·ªông':
        st.subheader(':blue[T·∫°o nhi·ªÖu chuy·ªÉn ƒë·ªông]')
        c5.onCreateMotionNoise()
    elif ques == '5.2 G·ª° nhi·ªÖu c·ªßa ·∫£nh c√≥ √≠t nhi·ªÖu':
        st.subheader(':blue[G·ª° nhi·ªÖu c·ªßa ·∫£nh c√≥ √≠t nhi·ªÖu]')
        c5.onDenoiseMotion()
    elif ques == '5.3 G·ª° nhi·ªÖu c·ªßa ·∫£nh c√≥ nhi·ªÅu nhi·ªÖu':
        st.subheader(':blue[G·ª° nhi·ªÖu c·ªßa ·∫£nh c√≥ nhi·ªÅu nhi·ªÖu]')
        c5.onDenoisestMotion()
elif app_mode == 'Chapter 9':
    with st.sidebar.container():
        st.header("X·ª≠ l√Ω ·∫£nh h√¨nh th√°i")
        ques = st.radio(
            "Choose one", ['9.1 ƒê·∫øm th√†nh ph·∫ßn li√™n th√¥ng c·ªßa mi·∫øng phi l√™ g√† (Connected Component)', '9.2 ƒê·∫øm h·∫°t g·∫°o (Count Rice)'])
    if ques == '9.1 ƒê·∫øm th√†nh ph·∫ßn li√™n th√¥ng c·ªßa mi·∫øng phi l√™ g√† (Connected Component)':
        st.subheader(
            ':blue[ƒê·∫øm th√†nh ph·∫ßn li√™n th√¥ng c·ªßa mi·∫øng phi l√™ g√† (Connected Component)]')
        c9.onConnectedComponent()
    elif ques == '9.2 ƒê·∫øm h·∫°t g·∫°o (Count Rice)':
        st.subheader(
            ':blue[ƒê·∫øm h·∫°t g·∫°o (Count Rice)]')
        c9.onCountRice()
